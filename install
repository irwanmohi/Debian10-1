#!/usr/bin/env bash

. /etc/os-release

RED="\033[31;1m"
GREEN="\033[32;1m"
YELLOW="\033[33;1m"
BLUE="\033[34;1m"
PURPLE="\033[35;1m"
CYAN="\033[36;1m"
PLAIN="\033[0m"

ipaddr=$( ip -4 addr | sed -ne 's|^.* inet \([^/]*\)/.* scope global.*$|\1|p' | head -1 )
basepath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

echo -e "${CYAN}Before that please make sure:${PLAIN}"
echo -e "[${GREEN}●${PLAIN}]  You have internet connection."
echo -e "[${GREEN}●${PLAIN}]  You have fresh Virtual private server"
echo ""

if [ "$EUID" -ne 0 ]; then
  echo -e "[${RED}●${PLAIN}] Script needs to be run as root" && exit
fi

if [[ $ID == "debian" ]]; then
  if [[ $VERSION_ID -ne 10 ]]; then
    echo -e "[${RED}●${PLAIN}] This script only support Debian 10 only" && exit
  fi
else
  echo -e "[${RED}●${PLAIN}] Please run this scripts on a Debian" && exit
fi

if readlink /proc/$$/exe | grep -qs "dash"; then
  echo -e "[${RED}●${PLAIN}] Script needs to be run with bash" && exit
fi

if [ ! -e /dev/net/tun ]; then
  echo -e "[${RED}●${PLAIN}] You need to enable tun first" && exit
fi

timedatectl set-timezone Asia/Kuala_Lumpur

apt-get -qq update &>/dev/null
apt-get -y -qq upgrade &>/dev/null
apt-get -y -qq install build-essential curl git unzip libtool autoconf automake cmake &>/dev/null
apt-get -y -qq install apt-transport-https software-properties-common &>/dev/null

echo "#!/bin/bash
echo \"----------------------------------------------------------------\"
echo \"'||'  '|' '||''|.   .|'''.|  +-+ +-+ +-+ +-+ +-+ +-+ +-+ +-+ +-+\"
echo \" '|.  .'   ||   ||  ||..  '  |C| |Y| |B| |E| |R| |T| |I| |Z| |E|\"
echo \"  ||  |    ||...|'   ''|||.  +-+ +-+ +-+ +-+ +-+ +-+ +-+ +-+ +-+\"
echo \"   |||     ||      .    '||  Created by Doctype\"
echo \"    |     .||.      |'...|'  Copyright 2021 Cybertize,\"
echo \"      Linux Debian-10        Allright Reserved.\"
echo \"----------------------------------------------------------------\"" > /etc/update-motd.d/10-uname
echo "" > /etc/motd

echo "deb http://deb.debian.org/debian/ buster main
deb-src http://deb.debian.org/debian/ buster main
deb http://deb.debian.org/debian/ buster-updates main
deb-src http://deb.debian.org/debian/ buster-updates main
deb http://security.debian.org/debian-security buster/updates main
deb-src http://security.debian.org/debian-security buster/updates main
deb http://mirrors.digitalocean.com/debian buster-backports main contrib non-free
deb-src http://mirrors.digitalocean.com/debian buster-backports main contrib non-free" > /etc/apt/sources.list

# /etc/issue.net
echo "[[ CYBERTIZE TERMS OF USE ]]

  - NO DDOS
  - NO TORREN
  - NO FLOODING
  - NO BUTEFORCE
  - NO MULTI LOGIN

url: https://cybertize.tk/
email: contact@cybertize.tk
telegram: https://t.me/ndiey" > /etc/issue.net

# /etc/sysctl.conf
echo "net.ipv6.conf.all.disable_ipv6 = 1
net.ipv4.ip_forward=1
net.core.default_qdisc=fq
net.ipv4.tcp_congestion_control=bbr
fs.file-max = 51200
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864
net.core.netdev_max_backlog = 250000
net.core.somaxconn = 4096
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 0
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 1200
net.ipv4.ip_local_port_range = 10000 65000
net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_max_tw_buckets = 5000
net.ipv4.tcp_fastopen = 3
net.ipv4.tcp_mem = 25600 51200 102400
net.ipv4.tcp_rmem = 4096 87380 67108864
net.ipv4.tcp_wmem = 4096 65536 67108864
net.ipv4.tcp_mtu_probing = 1
net.ipv4.tcp_congestion_control = hybla" > /etc/sysctl.conf
sysctl -p &>/dev/null

# /etc/shells
echo "# /etc/shells: valid login shells
/bin/sh
/bin/bash
/usr/bin/bash
/bin/rbash
/usr/bin/rbash
/bin/dash
/usr/bin/dash
/usr/bin/screen
/bin/false
/usr/bin/false" > /etc/shells

echo '# ~/.profile: executed by Bourne-compatible login shells.
if [ "$BASH" ]; then
  if [ -f ~/.bashrc ]; then
    . ~/.bashrc
  fi
fi

ulimit -n 51200
mesg n || true' > ~/.profile
source ~/.profile

echo "" > ~/.bashrc
echo "# ~/.bashrc: executed by bash(1) for non-login shells.
# PS1='${debian_chroot:+($debian_chroot)}\h:\w\$ '
# umask 022

export LS_OPTIONS='--color=auto'
eval \"`dircolors`\"
alias ls='ls $LS_OPTIONS'
alias ll='ls $LS_OPTIONS -l'
alias la='ls $LS_OPTIONS -a'" > ~/.bashrc
source ~/.bashrc

cp $basepath/plugins/menu /usr/local/bin/
cp $basepath/plugins/accounts/* /usr/local/bin/
chmod u+x /usr/local/bin/*

promptHelp() {
  echo "###############################################################"
  echo -e "${PURPLE}[[ CYBERTIZE SETUP MANAGER ]]${PLAIN}"
  echo "---------------------------------------------------------------"
  echo -e "${CYAN}Script by Doctype${PLAIN}"
  echo -e "${CYAN}https://t.me/ndiey${PLAIN}"
  echo -e "${CYAN}Copyright 2021 Cybertize${PLAIN}"
  echo "---------------------------------------------------------------"
  echo ""
  echo -e "${CYAN}Usage:${PLAIN}"
  echo -e "${YELLOW}  $0 [script]${PLAIN}"
  echo ""
  echo -e "${GREEN}  dropbear${PLAIN}       Install Dropbear package from apt sources"
  echo -e "${GREEN}  openvpn${PLAIN}        Install OpenVPN package from apt sources"
  echo -e "${GREEN}  squid${PLAIN}          Install Squid package from apt sources"
  echo -e "${GREEN}  stunnel${PLAIN}        Install Stunnel package from apt sources"
  echo -e "${GREEN}  shadowsocks${PLAIN}    Install ShadowSocks package from apt sources"
  echo -e "${GREEN}  v2ray${PLAIN}          Install V2ray package from apt backports"
  echo -e "${GREEN}  badvpn${PLAIN}         Compile and install badvpn from source file"
  echo -e "${GREEN}  nginx${PLAIN}          Install Nginx package from apt sources"
  echo -e "${GREEN}  webmin${PLAIN}         Install Webmin package from repository"
  echo -e "${GREEN}  fail2ban${PLAIN}       Install Fail2Ban package from apt sources"
  echo -e "${GREEN}  iptables${PLAIN}       Set firewall rules and loads on boot"
  echo -e "${GREEN}  plugins${PLAIN}        Copy plugin file and give execution mod"
  echo ""
  echo "################################################################"
}

if [[ $# = 0 ]]; then
  promptHelp && exit
fi
case "$1" in
  dropbear )
    bash $basepath/scripts/dropbear.bash
    break
  ;;
  openvpn )
    bash $basepath/scripts/openvpn.bash
    break
  ;;
  squid )
    bash $basepath/scripts/squid.bash
    break
  ;;
  stunnel )
    bash $basepath/scripts/stunnel.bash
    break
  ;;
  shadowsocks )
    bash $basepath/scripts/shadowsocks.bash
    break
  ;;
  badvpn )
    bash $basepath/scripts/badvpn.bash
    break
  ;;
  webmin )
    bash $basepath/scripts/webmin.bash
    break
  ;;
  fail2ban )
    bash $basepath/scripts/fail2ban.bash
    break
  ;;
  iptables )
    bash $basepath/scripts/iptables.bash
    break
  ;;
  plugins )
    cp $basepath/plugins/menu /usr/local/bin/
  ;;
  help )
    promptHelp
    break
  ;;
  * )
    echo -e "You have entered wrong option."
    exit 0
  ;;
esac
